{"version":3,"file":"messages-to-word-count.js","sources":["../src/utils/info.js","../src/messagesToWordCount.js","../src/scripts/messages-to-word-count.js"],"sourcesContent":["export function info(message, noEllipsis) {\n  console.log(`${message}${noEllipsis ? '' : '...'}`)\n}\n\nexport const timer = {\n  startTimer() {\n    startTime = Date.now()\n  },\n  getTime() {\n    return `Time taken: ${Date.now() - startTime}`\n  }\n}","import { info } from './utils/info'\nconst nonChars = /[\\.,\"!\\?£\\$%\\^&\\*\\|\\(\\)~\\=\\+\\[\\]\\/\\\\;:@#\\{\\}<>`0-9“”\\-]/g\nconst spacesRe = /\\s+/g\n\nconst filterWordsRe = /^(and|that|get|what|for|you|this|was|have|with|are|good|the|yeh|yeah|got|now|not|can|too|like|all|but)$/g\nlet removeApostropheWords\n\nexport const convertToWordCount = ({ data }, raw) => {\n\n  removeApostropheWords = raw\n  data = stripActions(data)\n\n  info('formatting messages')\n  const formattedMessages = formatMessages(data)\n\n  info('collating and filtering words')\n  const filteredWords = collateFilterWords(formattedMessages)\n\n  info('creating unique words object')\n  const uniqueWords = createUniqueWords(filteredWords)\n\n  return { data: uniqueWords }\n}\n\nfunction formatString(str) {\n  const formattedStr = str.replace(nonChars, ' ')\n    .replace(spacesRe, ' ')\n    .toLowerCase()\n\n  return formattedStr\n}\n\nfunction formatMessages(data) {\n  const wordsTxt = data.reduce(\n    (arr, item) => arr.concat(formatString(item.message)),\n    []\n  )\n\n  return wordsTxt\n}\n\nfunction createUniqueWords(words) {\n  const uniqueWords = words.reduce((obj, item) => {\n    if (item[0] === '\\'') {\n      item = item.slice(1)\n    } else if (item[item.length - 1] === '\\'') {\n      item = item.slice(0, -1)\n    }\n\n    if (!obj[item]) {\n      obj[item] = 1\n    } else {\n      obj[item] += 1\n    }\n\n    return obj\n  }, {})\n\n  return uniqueWords\n}\n\nfunction collateFilterWords(messages) {\n  const words = messages.reduce(\n    (arr, message) => \n      arr.concat(\n        message.split(' ')\n          .filter(filterWords)\n      ),\n    []\n  )\n\n  return words\n}\n\nfunction filterWords(word) {\n  if (word.length > 2\n    && word.length < 20\n    && !filterWordsRe.test(word)\n    && (!removeApostropheWords || (removeApostropheWords && word.indexOf(\"'\") < 0))\n  ) {\n    return true\n  }\n\n  return false\n}\n\nfunction stripActions(data) {\n  return data.filter(i => i.type !== 'action')\n}","import { convertToWordCount } from '../messagesToWordCount'\nimport { info } from '../utils/info'\nimport { writeFile, readFileSync } from 'fs'\nconst fileName = process.argv[2]\nconst flags = process.argv.slice(2)\nconst removeApostropheWords = flags.includes('-ra')\n\nif (!fileName) {\n  throw Error('No filename provided.')\n}\n\nlet json\nconst jsonUrl = `${fileName.slice(0, -14)}-words.json`\n\ntry {\n  json = convertToWordCount(JSON.parse(readFileSync(fileName, 'utf8')), removeApostropheWords)\n} catch (err) {\n  throw Error('Error loading file. Make sure the filename is correct and target file exists.')\n}\n\nif (!json) {\n  throw Error('No data returned.')\n}\n\nwriteFile(jsonUrl, JSON.stringify(json), (err) => {\n  if (err) {\n    throw err\n  }\n\n  info(`written to ${jsonUrl}`, true)\n})"],"names":["info","message","noEllipsis","console","log","nonChars","spacesRe","filterWordsRe","removeApostropheWords","filterWords","word","length","test","indexOf","fileName","process","argv","slice","includes","Error","json","jsonUrl","data","raw","filter","i","type","stripActions","formattedMessages","reduce","arr","item","concat","replace","toLowerCase","formatMessages","filteredWords","split","obj","convertToWordCount","JSON","parse","readFileSync","err","writeFile","stringify"],"mappings":"6BAAgBA,EAAKC,EAASC,GAC5BC,QAAQC,IAAK,GAAEH,IAAUC,EAAa,GAAK,SCA7C,MAAMG,EAAW,2DACXC,EAAW,OAEXC,EAAgB,2GACtB,IAAIC,EAqEJ,SAASC,EAAYC,GACnB,UAAIA,EAAKC,OAAS,GACbD,EAAKC,OAAS,KACbJ,EAAcK,KAAKF,IAClBF,KAA0BA,GAAyBE,EAAKG,QAAQ,KAAO,IC3EhF,MAAMC,EAAWC,QAAQC,KAAK,GAExBR,EADQO,QAAQC,KAAKC,MAAM,GACGC,SAAS,OAE7C,IAAKJ,EACH,MAAMK,MAAM,yBAGd,IAAIC,EACJ,MAAMC,EAAaP,EAASG,MAAM,GAAI,IAArB,cAEjB,IACEG,EDRgC,GAAGE,KAAAA,GAAQC,KAE3Cf,ECMsEA,EDLtEc,EA4EF,SAAsBA,GACpB,OAAOA,EAAKE,OAAOC,GAAgB,WAAXA,EAAEC,MA7EnBC,CAAaL,GAEpBtB,EAAK,uBACL,MAAM4B,EAmBR,SAAwBN,GAMtB,OALiBA,EAAKO,OACpB,CAACC,EAAKC,IAASD,EAAIE,OAAoBD,EAAK9B,QATrBgC,QAAQ5B,EAAU,KACxC4B,QAAQ3B,EAAU,KAClB4B,eAQD,IAtBwBC,CAAeb,GAEzCtB,EAAK,iCACL,MAAMoC,EAAmCR,EA8ClBC,OACrB,CAACC,EAAK7B,IACJ6B,EAAIE,OACF/B,EAAQoC,MAAM,KACXb,OAAOf,IAEd,IA/CF,OAHAT,EAAK,gCAGE,CAAEsB,KAF6Bc,EAuBZP,OAAO,CAACS,EAAKP,KACrB,MAAZA,EAAK,GACPA,EAAOA,EAAKd,MAAM,GACiB,MAA1Bc,EAAKA,EAAKpB,OAAS,KAC5BoB,EAAOA,EAAKd,MAAM,GAAI,IAGnBqB,EAAIP,GAGPO,EAAIP,IAAS,EAFbO,EAAIP,GAAQ,EAKPO,GACN,MCzCIC,CAAmBC,KAAKC,MAAMC,eAAa5B,EAAU,UAC5D,MAAO6B,GACP,MAAMxB,MAAM,iFAGd,IAAKC,EACH,MAAMD,MAAM,qBAGdyB,YAAUvB,EAASmB,KAAKK,UAAUzB,GAAQuB,IACxC,GAAIA,EACF,MAAMA,EAGR3C,EAAM,cAAaqB,GAAW"}