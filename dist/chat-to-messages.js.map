{"version":3,"file":"chat-to-messages.js","sources":["../src/chatToMessages.js","../src/scripts/chat-to-messages.js","../src/utils/info.js"],"sourcesContent":["const CURRENT_USER = 'You'\nconst LINE_DATE_END = 22\nconst LINE_TEXT_START = 23\n\nconst omitMediaRegEx = /(image|audio|video) omitted$/\nlet systemMessage\n\nexport function convertToJSON(chatTextString, omitMedia, noType) {\n  const chatTextArr = chatTextString.split('\\n')\n  const jsonData = []\n\n  for (let i = 0, len = chatTextArr.length; i < len; i ++) {\n    const line = trimLine(chatTextArr[i])\n\n    if (!line.length || (omitMedia && omitMediaRegEx.test(line))) {\n      continue\n    }\n\n    systemMessage = false\n\n    const date = getDate(line.slice(0, LINE_DATE_END))\n\n    // if no date, treat as additional line\n    if (!date) {\n      jsonData[jsonData.length - 2].message += `\\n${line}`\n    } else {\n      const allMessage = line.slice(LINE_TEXT_START)\n      const user = getUser(allMessage)\n      const message = systemMessage ? allMessage : getMessage(allMessage, user)\n\n      jsonData.push({\n        date,\n        user,\n        message,\n        ...( !noType ? { type: systemMessage ? 'action' : 'message' } : {})\n      })\n    }\n  }\n\n  return { data: jsonData }\n}\n\nfunction trimLine(line) {\n  line = line.trim()\n  // remove left to right unicode char\n  if (line.charCodeAt(0) === 8206) return line.slice(1)\n  return line\n}\n\nfunction getDate(dateStr) {\n  if (dateStr[0] !== '[') {\n    return null\n  }\n\n  const year = dateStr.slice(7, 11)\n  const month = parseInt(dateStr.slice(4,6)) - 1\n  const date = dateStr.slice(1, 3)\n  const hour = dateStr.slice(13, 15)\n  const min = dateStr.slice(16, 18)\n  const sec = dateStr.slice(19,21)\n\n  return new Date(year, month, date, hour, min, sec)\n}\n\nfunction getUser(userStr) {\n  let endIndex = userStr.indexOf(':')\n  \n  if (endIndex >= 0) {\n    return userStr.slice(0, endIndex)\n  } else {\n    endIndex = userStr.search(/\\s(left|changed|was|were)/)\n    if (endIndex >= 0) {\n      systemMessage = true\n      const user = userStr.slice(0, endIndex)\n      return user === 'You' ? CURRENT_USER : user\n    }\n  }\n\n  // no user found\n  return null\n}\n\nfunction getMessage(messageStr, user) {\n  if (user) {\n    messageStr = messageStr.slice(user.length + 2)\n  }\n\n  return messageStr\n}","import { convertToJSON } from '../chatToMessages'\nimport { info } from '../utils/info'\nimport { writeFile, readFileSync } from 'fs'\n\nconst fileName = process.argv[2]\nconst flags = process.argv.slice(2)\nconst omitMedia = !flags.includes('-m')\nconst noType = flags.includes('-nt')\n\nif (!fileName) {\n  throw Error('No filename provided.')\n}\n\nlet json\nlet jsonUrl = `${fileName.slice(0, -4)}-messages.json`\n\ntry {\n  const file = readFileSync(fileName, 'utf8')\n  json = convertToJSON(file, omitMedia, noType)\n} catch (err) {\n  throw Error('Error loading file. Make sure the filename is correct and target file exists.')\n}\n\nif (!json) {\n  throw Error('No data returned.')\n}\n\nwriteFile(jsonUrl, JSON.stringify(json), (err) => {\n  if (err) {\n    throw err\n  }\n  \n  info(`Written to ${jsonUrl}`)\n})\n","export function info(message, noEllipsis) {\n  console.log(`${message}${noEllipsis ? '' : '...'}`)\n}"],"names":["omitMediaRegEx","systemMessage","trimLine","line","trim","charCodeAt","slice","getDate","dateStr","year","month","parseInt","date","hour","min","sec","Date","getUser","userStr","endIndex","indexOf","search","user","getMessage","messageStr","length","fileName","process","argv","flags","omitMedia","includes","noType","Error","json","jsonUrl","chatTextString","chatTextArr","split","jsonData","i","len","test","allMessage","message","push","type","data","convertToJSON","readFileSync","err","writeFile","JSON","stringify","console","log"],"mappings":"oBAAA,MAIMA,EAAiB,+BACvB,IAAIC,EAqCJ,SAASC,EAASC,GAGhB,OAA2B,QAF3BA,EAAOA,EAAKC,QAEHC,WAAW,GAAoBF,EAAKG,MAAM,GAC5CH,EAGT,SAASI,EAAQC,GACf,GAAmB,MAAfA,EAAQ,GACV,YAGF,MAAMC,EAAOD,EAAQF,MAAM,EAAG,IACxBI,EAAQC,SAASH,EAAQF,MAAM,EAAE,IAAM,EACvCM,EAAOJ,EAAQF,MAAM,EAAG,GACxBO,EAAOL,EAAQF,MAAM,GAAI,IACzBQ,EAAMN,EAAQF,MAAM,GAAI,IACxBS,EAAMP,EAAQF,MAAM,GAAG,IAE7B,WAAWU,KAAKP,EAAMC,EAAOE,EAAMC,EAAMC,EAAKC,GAGhD,SAASE,EAAQC,GACf,IAAIC,EAAWD,EAAQE,QAAQ,KAE/B,GAAID,GAAY,EACd,OAAOD,EAAQZ,MAAM,EAAGa,GAGxB,GADAA,EAAWD,EAAQG,OAAO,6BACtBF,GAAY,EAAG,CACjBlB,GAAgB,EAChB,MAAMqB,EAAOJ,EAAQZ,MAAM,EAAGa,GAC9B,MAAgB,QAATG,EA1EQ,MA0EwBA,EAK3C,YAGF,SAASC,EAAWC,EAAYF,GAK9B,OAJIA,IACFE,EAAaA,EAAWlB,MAAMgB,EAAKG,OAAS,IAGvCD,ECnFT,MAAME,EAAWC,QAAQC,KAAK,GACxBC,EAAQF,QAAQC,KAAKtB,MAAM,GAC3BwB,GAAaD,EAAME,SAAS,MAC5BC,EAASH,EAAME,SAAS,OAE9B,IAAKL,EACH,MAAMO,MAAM,yBAGd,IAAIC,EACAC,EAAaT,EAASpB,MAAM,GAAI,GAArB,iBAEf,IAEE4B,WDX4BE,EAAgBN,EAAWE,GACvD,MAAMK,EAAcD,EAAeE,MAAM,MACnCC,EAAW,GAEjB,IAAK,IAAIC,EAAI,EAAGC,EAAMJ,EAAYZ,OAAQe,EAAIC,EAAKD,IAAM,CACvD,MAAMrC,EAAOD,EAASmC,EAAYG,IAElC,IAAKrC,EAAKsB,QAAWK,GAAa9B,EAAe0C,KAAKvC,GACpD,SAGFF,GAAgB,EAEhB,MAAMW,EAAOL,EAAQJ,EAAKG,MAAM,EAnBd,KAsBlB,GAAKM,EAEE,CACL,MAAM+B,EAAaxC,EAAKG,MAxBN,IAyBZgB,EAAOL,EAAQ0B,GACfC,EAAU3C,EAAgB0C,EAAapB,EAAWoB,EAAYrB,GAEpEiB,EAASM,KAAK,CACZjC,KAAAA,EACAU,KAAAA,EACAsB,QAAAA,KACMZ,EAA0D,GAAjD,CAAEc,KAAM7C,EAAgB,SAAW,kBAVpDsC,EAASA,EAASd,OAAS,GAAGmB,SAAY,KAAIzC,EAelD,MAAO,CAAE4C,KAAMR,GCrBRS,CADMC,eAAavB,EAAU,QACTI,EAAWE,GACtC,MAAOkB,GACP,MAAMjB,MAAM,iFAGd,IAAKC,EACH,MAAMD,MAAM,qBAGdkB,YAAUhB,EAASiB,KAAKC,UAAUnB,GAAQgB,IACxC,GAAIA,EACF,MAAMA,EC5BRI,QAAQC,ID+BF,cAAapB,EC/BN"}